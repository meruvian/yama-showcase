<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:oauth2="http://www.springframework.org/schema/security/oauth2"
	xmlns:sc="http://www.springframework.org/schema/security" xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/security/oauth2 http://www.springframework.org/schema/security/spring-security-oauth2.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
	<bean id="PBEStringEncryptor" class="org.jasypt.encryption.pbe.StandardPBEStringEncryptor" p:password="yama" />
	
	<bean id="passwordEncoder" class="org.springframework.security.crypto.password.StandardPasswordEncoder">
		<constructor-arg value="yama" />
	</bean>
	
	<bean id="textEncryptor" class="org.springframework.security.crypto.encrypt.Encryptors" factory-method="noOpText" />
	
	<bean id="userService" class="org.meruvian.yama.web.security.DefaultUserDetailsManager" autowire="byType" />

	<sc:http create-session="never" entry-point-ref="oauthAuthenticationEntryPoint" access-decision-manager-ref="accessDecisionManager">
		<sc:intercept-url pattern="/v1/api-docs" access="IS_AUTHENTICATED_ANONYMOUSLY" />
		<sc:intercept-url pattern="/v1/**" access="SCOPE_READ,SCOPE_WRITE" />
		
		<sc:custom-filter ref="resourceServerFilter" before="PRE_AUTH_FILTER" />
		<sc:access-denied-handler ref="oauthAccessDeniedHandler" />
	</sc:http>
	
	<bean id="oauthAuthenticationEntryPoint" class="org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint" />
	
	<bean id="accessDecisionManager" class="org.springframework.security.access.vote.UnanimousBased">
		<constructor-arg>
			<list>
				<bean class="org.springframework.security.oauth2.provider.vote.ScopeVoter" />
				<bean class="org.springframework.security.access.vote.RoleVoter" />
				<bean class="org.springframework.security.access.vote.AuthenticatedVoter" />
			</list>
		</constructor-arg>
	</bean>
	
	<oauth2:resource-server id="resourceServerFilter" token-services-ref="tokenServices" />
	
	<bean id="tokenConverter" class="org.springframework.security.oauth2.provider.token.store.JwtAccessTokenConverter">
		<property name="signingKey" value="yama" />
	</bean>
	
	<bean id="tokenEnhancer" class="org.springframework.security.oauth2.provider.token.store.JwtAccessTokenConverter">
		<property name="signingKey" value="yama" />
		<property name="accessTokenConverter" ref="tokenConverter" />
	</bean>
	
	<!-- Used for the persistence of tokens -->
	<bean id="tokenStore" class="org.springframework.security.oauth2.provider.token.store.JwtTokenStore">
		<constructor-arg ref="tokenEnhancer" />
	</bean>

	<!-- ClientsDeailsService: Entry Point to clients database -->
	<bean id="clientDetailsService" class="org.meruvian.yama.web.security.oauth.DefaultClientDetailsManager" autowire="byType" />

	<!-- Used to create token and and every thing about them except for their 
		persistence that is reposibility of TokenStore (Given here is a default implementation) -->
	<bean id="tokenServices" class="org.springframework.security.oauth2.provider.token.DefaultTokenServices">
		<property name="tokenStore" ref="tokenStore" />
		<property name="supportRefreshToken" value="true" />
		<property name="clientDetailsService" ref="clientDetailsService" />
		<property name="tokenEnhancer" ref="tokenEnhancer" />
	</bean>
	
	<bean id="oauthAccessDeniedHandler" class="org.springframework.security.oauth2.provider.error.OAuth2AccessDeniedHandler" />
	
	<sc:global-method-security pre-post-annotations="enabled" proxy-target-class="true">
		<!--you could also wire in the expression handler up at the layer of the http filters. See https://jira.springsource.org/browse/SEC-1452 -->
		<sc:expression-handler ref="oauthExpressionHandler" />
	</sc:global-method-security>

	<oauth2:expression-handler id="oauthExpressionHandler" />

	<oauth2:web-expression-handler id="oauthWebExpressionHandler" />
	
	<sc:authentication-manager />
	
	<bean id="requestFactory" class="org.springframework.security.oauth2.provider.request.DefaultOAuth2RequestFactory">
		<constructor-arg ref="clientDetailsService" />
	</bean>
	
	<bean id="tokenGranter" class="org.springframework.security.oauth2.provider.client.ClientCredentialsTokenGranter">
		<constructor-arg ref="tokenServices" />
		<constructor-arg ref="clientDetailsService" />
		<constructor-arg ref="requestFactory" />
	</bean>
</beans>